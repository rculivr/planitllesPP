{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/custom_labels.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","export const customLabelMap = {\r\n  any: () => new Date().getFullYear().toString(),\r\n  mes: () => {\r\n    const mesosCatalans = [\r\n      \"gener\",\r\n      \"febrer\",\r\n      \"març\",\r\n      \"abril\",\r\n      \"maig\",\r\n      \"juny\",\r\n      \"juliol\",\r\n      \"agost\",\r\n      \"setembre\",\r\n      \"octubre\",\r\n      \"novembre\",\r\n      \"desembre\",\r\n    ];\r\n    return mesosCatalans[new Date().getMonth()];\r\n  },\r\n  dia: () => new Date().getDate().toString().padStart(2, \"0\"),\r\n};\r\n","import { customLabelMap } from \"./custom_labels.js\";\r\n\r\nOffice.onReady(() => {\r\n  scanLabels();\r\n  document.getElementById(\"scanLabelsButton\").onclick = scanLabels;\r\n  document.getElementById(\"labelForm\").onsubmit = handleFormSubmit;\r\n  document.getElementById(\"newSlideForm\").onsubmit = handleNewSlideSubmit;\r\n  document.getElementById(\"toggleSlideForm\").onsubmit = handleToggleSlideSubmit;\r\n});\r\n\r\nasync function findPattern(pattern) {\r\n  let foundLabels = new Map();\r\n  await PowerPoint.run(async (context) => {\r\n    const presentation = context.presentation;\r\n    const slides = presentation.slides;\r\n    slides.load(\"items\");\r\n    await context.sync();\r\n\r\n    for (let slide of slides.items) {\r\n      let shapes = slide.shapes;\r\n      shapes.load(\"items\");\r\n      await context.sync();\r\n\r\n      for (let shape of shapes.items) {\r\n        try {\r\n          shape.textFrame.load(\"textRange/text\");\r\n          await context.sync();\r\n\r\n          const text = shape.textFrame.textRange.text;\r\n          const matches = [...text.matchAll(pattern)];\r\n          if (matches.length > 0) {\r\n            console.log(\"Match: \", matches);\r\n          }\r\n\r\n          for (const match of matches) {\r\n            const customLabelName = match[1];\r\n            const imageLabelName = match[2];\r\n            const labelName = match[3];\r\n            const dependsOn = match[4];\r\n            const dependentValues = match[5];\r\n            const options = match[6];\r\n\r\n            if (customLabelName) {\r\n              const key = `#${customLabelName}`;\r\n              if (!foundLabels.has(key)) {\r\n                foundLabels.set(key, { type: \"custom\" });\r\n              }\r\n            }\r\n            if (imageLabelName) {\r\n              const key = `*${imageLabelName}`;\r\n              if (!foundLabels.has(key)) {\r\n                foundLabels.set(key, { type: \"image\" });\r\n              }\r\n            }\r\n            if (labelName) {\r\n              const key = labelName;\r\n              if (dependsOn && dependentValues) {\r\n                const values = dependentValues.split(\",\").map((v) => v.trim());\r\n                if (!foundLabels.has(key)) {\r\n                  foundLabels.set(key, {\r\n                    options: null,\r\n                    dependsOn,\r\n                    map: values,\r\n                  });\r\n                }\r\n              } else if (options) {\r\n                const opts = options.split(\",\").map((v) => v.trim());\r\n                if (!foundLabels.has(key)) {\r\n                  foundLabels.set(key, {\r\n                    options: opts,\r\n                    dependsOn: null,\r\n                    map: null,\r\n                  });\r\n                }\r\n              } else {\r\n                if (!foundLabels.has(key)) {\r\n                  foundLabels.set(key, {\r\n                    options: null,\r\n                    dependsOn: null,\r\n                    map: null,\r\n                  });\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } catch (error) {}\r\n      }\r\n    }\r\n  });\r\n\r\n  return foundLabels;\r\n}\r\n\r\nasync function scanLabels() {\r\n  clearErrors();\r\n  const pattern = /<<#(\\w+)>>|<<\\*(\\w+)>>|<<(\\w+)(?::(\\w+)\\[([^\\]]+)\\]|(?:\\[([^\\]]+)\\]))?>>/g;\r\n  let foundLabels = await findPattern(pattern);\r\n  console.log(\"Found labels: \", foundLabels);\r\n\r\n  validatedLabels = new Map();\r\n  validatedLabels = checkLabels(foundLabels);\r\n  console.log(\"Validated\", validatedLabels);\r\n\r\n  await createToggleSlideForm();\r\n  createInputFields(validatedLabels);\r\n}\r\n\r\nlet validatedLabels = new Map();\r\nfunction checkLabels(foundLabels) {\r\n  for (const [name, label] of foundLabels) {\r\n    if (name.startsWith(\"#\") && !customLabelMap.hasOwnProperty(name.substring(1))) {\r\n      showError(`<<#${name.substring(1)}>> no existeix!`);\r\n      continue;\r\n    }\r\n    if (label.dependsOn) {\r\n      if (!foundLabels.has(label.dependsOn)) {\r\n        showError(`<<${label.dependsOn}>> no existeix!`);\r\n        continue;\r\n      }\r\n      if (foundLabels.get(label.dependsOn)[\"options\"].length !== label.map.length) {\r\n        showError(`El nombe d'opcions de <<${name}>> i <<${label.dependsOn}>> ha de ser igual!`);\r\n        continue;\r\n      }\r\n      if (!validatedLabels.has(name)) {\r\n        validatedLabels.set(name, label);\r\n      }\r\n    } else if (label.options) {\r\n      validatedLabels.set(name, label);\r\n    } else {\r\n      validatedLabels.set(name, label);\r\n    }\r\n  }\r\n  return validatedLabels;\r\n}\r\n\r\nasync function handleFormSubmit(event) {\r\n  event.preventDefault();\r\n\r\n  const labelMap = {};\r\n\r\n  // Helper to convert file to base64\r\n  function fileToBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => resolve(reader.result.split(\",\")[1]); // Remove data:image/...;base64,\r\n      reader.onerror = reject;\r\n      reader.readAsDataURL(file);\r\n    });\r\n  }\r\n\r\n  // Collect all file input promises\r\n  const filePromises = [];\r\n\r\n  validatedLabels.forEach((label, name) => {\r\n    if (label.dependsOn && label.map) {\r\n      const sourceInput = document.getElementById(label.dependsOn);\r\n      if (sourceInput) {\r\n        const selectedIndex = sourceInput.selectedIndex;\r\n        labelMap[name] = label.map[selectedIndex];\r\n      }\r\n    } else if (name.startsWith(\"*\")) {\r\n      const fileInput = document.getElementById(name);\r\n      if (fileInput && fileInput.files.length > 0) {\r\n        // Push a promise to convert file to base64\r\n        filePromises.push(\r\n          fileToBase64(fileInput.files[0]).then((base64) => {\r\n            labelMap[name] = base64;\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      const input = document.getElementById(name);\r\n      if (input) {\r\n        labelMap[name] = input.value;\r\n      }\r\n    }\r\n  });\r\n\r\n  // Wait for all file conversions\r\n  await Promise.all(filePromises);\r\n\r\n  console.log(\"Final labelMap:\", labelMap);\r\n  await replaceLabels(labelMap);\r\n}\r\n\r\nlet originalTexts = new Map(); // Store original text for undo\r\n\r\nasync function replaceLabels(labelMap) {\r\n  originalTexts.clear(); // Clear previous state\r\n  await PowerPoint.run(async (context) => {\r\n    const slides = context.presentation.slides;\r\n    slides.load(\"items\");\r\n    await context.sync();\r\n\r\n    const pattern = /<<#(\\w+)>>|<<\\*(\\w+)>>|<<(\\w+)(?::(\\w+)\\[([^\\]]+)\\]|(?:\\[([^\\]]+)\\]))?>>/g;\r\n    for (let slideIdx = 0; slideIdx < slides.items.length; slideIdx++) {\r\n      const slide = slides.items[slideIdx];\r\n      const shapes = slide.shapes;\r\n      shapes.load(\"items\");\r\n      await context.sync();\r\n\r\n      for (let shapeIdx = 0; shapeIdx < shapes.items.length; shapeIdx++) {\r\n        try {\r\n          const shape = shapes.items[shapeIdx];\r\n          shape.textFrame.load(\"textRange/text\");\r\n          await context.sync();\r\n\r\n          const textRange = shape.textFrame.textRange;\r\n          const text = textRange.text;\r\n\r\n          const matches = [...text.matchAll(pattern)];\r\n\r\n          const replacements = [];\r\n          for (let i = matches.length - 1; i >= 0; i--) {\r\n            const match = matches[i];\r\n            const fullMatch = match[0];\r\n            const customLabelName = match[1]; // <<#name>>\r\n            const imageLabelName = match[2]; // <<*name>>\r\n            const labelName = match[3]; // <<labelName...>>\r\n            const dependsOn = match[4];\r\n            const dependentValues = match[5];\r\n            const options = match[6];\r\n\r\n            let replacementValue = null;\r\n\r\n            if (customLabelName && customLabelMap.hasOwnProperty(customLabelName)) {\r\n              replacementValue = customLabelMap[customLabelName]();\r\n            } else if (imageLabelName && labelMap[`*${imageLabelName}`]) {\r\n              // Replace the shape with an image if <<*name>> is found\r\n              const base64 = labelMap[`*${imageLabelName}`];\r\n              // Remove the label text\r\n              const subRange = textRange.getSubstring(match.index, fullMatch.length);\r\n              subRange.text = \"\";\r\n              // Set the image as fill (if possible)\r\n              await shape.fill.setImage(base64);\r\n              // Store the replacement for undo (removes label text, not image)\r\n              replacements.push({\r\n                index: match.index,\r\n                original: fullMatch,\r\n                replaced: \"\",\r\n              });\r\n              continue; // Skip further text replacement for this match\r\n            } else if (dependsOn && dependentValues) {\r\n              const sourceValue = labelMap[dependsOn];\r\n              const values = dependentValues.split(\",\").map((v) => v.trim());\r\n              const sourceOptions = validatedLabels.get(dependsOn)?.options || [];\r\n              const index = sourceOptions.indexOf(sourceValue);\r\n              if (index !== -1 && index < values.length) {\r\n                replacementValue = values[index];\r\n              }\r\n            } else if (labelName) {\r\n              replacementValue = labelMap[labelName];\r\n            }\r\n\r\n            if (replacementValue !== null && replacementValue !== undefined) {\r\n              const subRange = textRange.getSubstring(match.index, fullMatch.length);\r\n              subRange.text = replacementValue;\r\n              replacements.push({\r\n                index: match.index,\r\n                original: fullMatch,\r\n                replaced: replacementValue,\r\n              });\r\n            }\r\n          }\r\n          originalTexts.set(`${slideIdx}_${shapeIdx}`, replacements);\r\n        } catch (error) {}\r\n      }\r\n    }\r\n    console.log(\"originals: \", originalTexts);\r\n    await context.sync();\r\n  });\r\n}\r\n\r\nasync function undoReplaceLabels() {\r\n  await PowerPoint.run(async (context) => {\r\n    const slides = context.presentation.slides;\r\n    slides.load(\"items\");\r\n    await context.sync();\r\n\r\n    for (let slideIdx = 0; slideIdx < slides.items.length; slideIdx++) {\r\n      const slide = slides.items[slideIdx];\r\n      const shapes = slide.shapes;\r\n      shapes.load(\"items\");\r\n      await context.sync();\r\n\r\n      for (let shapeIdx = 0; shapeIdx < shapes.items.length; shapeIdx++) {\r\n        try {\r\n          const shape = shapes.items[shapeIdx];\r\n          shape.textFrame.load(\"textRange/text\");\r\n          await context.sync();\r\n\r\n          const textRange = shape.textFrame.textRange;\r\n          const key = `${slideIdx}_${shapeIdx}`;\r\n          const replacements = originalTexts.get(key);\r\n\r\n          if (replacements && replacements.length > 0) {\r\n            console.log(\"Replacemtns: \", replacements);\r\n\r\n            for (let i = replacements.length - 1; i >= 0; i--) {\r\n              const { index, original, replaced } = replacements[i];\r\n              const subRange = textRange.getSubstring(index, replaced.length);\r\n              subRange.text = original;\r\n            }\r\n          }\r\n        } catch {}\r\n      }\r\n    }\r\n    await context.sync();\r\n    originalTexts.clear();\r\n  });\r\n}\r\n\r\nfunction addUndoButton() {\r\n  const container = document.getElementById(\"inputContainer\");\r\n  let undoBtn = document.getElementById(\"undoButton\");\r\n  if (!undoBtn) {\r\n    undoBtn = document.createElement(\"button\");\r\n    undoBtn.id = \"undoButton\";\r\n    undoBtn.type = \"button\";\r\n    undoBtn.className = \"inputButton\";\r\n    undoBtn.textContent = \"↩️ DESFER\";\r\n    undoBtn.onclick = async () => {\r\n      await undoReplaceLabels();\r\n    };\r\n\r\n    container.appendChild(undoBtn);\r\n  }\r\n}\r\n\r\nfunction createInputFields(labels) {\r\n  const container = document.getElementById(\"inputContainer\");\r\n  container.innerHTML = \"\";\r\n\r\n  labels.forEach((label, name) => {\r\n    if (label.dependsOn) return;\r\n    if (name.startsWith(\"#\")) return; // Skip custom labels (auto-filled)\r\n\r\n    const div = document.createElement(\"div\");\r\n    div.className = \"form-group\";\r\n\r\n    const labelEl = document.createElement(\"label\");\r\n    labelEl.setAttribute(\"for\", name);\r\n    if (name.startsWith(\"*\")) {\r\n      labelEl.textContent = name.substring(1);\r\n    } else {\r\n      labelEl.textContent = name;\r\n    }\r\n    div.appendChild(labelEl);\r\n\r\n    // Add file input for image labels (<<*name>>)\r\n    if (name.startsWith(\"*\")) {\r\n      const fileInput = document.createElement(\"input\");\r\n      fileInput.type = \"file\";\r\n      fileInput.id = name;\r\n      fileInput.name = name;\r\n      fileInput.accept = \"image/*\";\r\n      fileInput.required = true;\r\n      div.appendChild(fileInput);\r\n    } else if (Array.isArray(label.options)) {\r\n      const select = document.createElement(\"select\");\r\n      select.id = name;\r\n      select.className = \"selector\";\r\n      select.name = name;\r\n\r\n      label.options.forEach((opt) => {\r\n        const optionEl = document.createElement(\"option\");\r\n        optionEl.value = opt;\r\n        optionEl.textContent = opt;\r\n        select.appendChild(optionEl);\r\n      });\r\n\r\n      div.appendChild(select);\r\n    } else {\r\n      const input = document.createElement(\"input\");\r\n      input.type = \"text\";\r\n      input.id = name;\r\n      input.name = name;\r\n      input.required = true;\r\n      div.appendChild(input);\r\n    }\r\n\r\n    container.appendChild(div);\r\n  });\r\n\r\n  if (labels.size !== 0) {\r\n    const submit = document.createElement(\"button\");\r\n    submit.type = \"submit\";\r\n    submit.className = \"inputButton\";\r\n    submit.textContent = \"✅ SUBSTITUIR\";\r\n    container.appendChild(submit);\r\n\r\n    addUndoButton();\r\n  } else {\r\n    const msg = document.createElement(\"p\");\r\n    msg.textContent = \"No s'ha trobat cap etiqueta.\";\r\n\r\n    container.appendChild(msg);\r\n  }\r\n}\r\n\r\nasync function getAllSlideTags() {\r\n  const tags = [];\r\n  await PowerPoint.run(async (context) => {\r\n    const slides = context.presentation.slides;\r\n    slides.load(\"items\");\r\n    await context.sync();\r\n    for (let i = 0; i < slides.items.length; i++) {\r\n      const slide = slides.items[i];\r\n      slide.tags.load(\"items\");\r\n      await context.sync();\r\n      for (const tag of slide.tags.items) {\r\n        if (tag.key === \"TOGGLE\") {\r\n          tags.push({ idx: i, tag: tag.value });\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  });\r\n  return tags;\r\n}\r\n\r\nasync function handleNewSlideSubmit(event) {\r\n  event.preventDefault();\r\n\r\n  const input = document.getElementById(\"slideName\");\r\n  if (!input || !input.value.trim()) return;\r\n  const tagValue = input.value.trim();\r\n\r\n  await PowerPoint.run(async (context) => {\r\n    const slides = context.presentation.slides;\r\n    slides.load(\"items\");\r\n    await context.sync();\r\n\r\n    const selection = context.presentation.getSelectedSlides();\r\n    selection.load(\"items\");\r\n    await context.sync();\r\n\r\n    if (selection.items.length > 0) {\r\n      const selectedId = selection.items[0].id;\r\n      const slideIdx = slides.items.findIndex((s) => s.id === selectedId);\r\n      if (slideIdx !== -1) {\r\n        const slide = slides.items[slideIdx];\r\n        slide.tags.load(\"items\");\r\n        await context.sync();\r\n        slide.tags.delete(\"TOGGLE\");\r\n        slide.tags.add(\"TOGGLE\", tagValue);\r\n        await context.sync();\r\n      }\r\n    }\r\n  });\r\n\r\n  console.log(await getAllSlideTags());\r\n  input.value = \"\";\r\n  createToggleSlideForm();\r\n}\r\n\r\nasync function createToggleSlideForm() {\r\n  const container = document.getElementById(\"toggleSlideFormContainer\");\r\n  container.style.display = \"block\";\r\n  container.innerHTML = \"\";\r\n\r\n  const tags = await getAllSlideTags();\r\n\r\n  if (tags.length === 0) {\r\n    container.textContent = \"No tagged slides found.\";\r\n    return;\r\n  }\r\n\r\n  for (const { idx, tag } of tags) {\r\n    const div = document.createElement(\"div\");\r\n    div.style.display = \"flex\";\r\n    div.style.alignItems = \"center\";\r\n    div.style.justifyContent = \"space-between\";\r\n    div.style.marginBottom = \"8px\";\r\n\r\n    const labelWrapper = document.createElement(\"div\");\r\n    labelWrapper.style.display = \"flex\";\r\n\r\n    labelWrapper.style.gap = \"6px\";\r\n\r\n    const checkbox = document.createElement(\"input\");\r\n    checkbox.type = \"checkbox\";\r\n    checkbox.checked = false;\r\n    checkbox.className = \"checkmark\";\r\n    checkbox.id = `slideVisible_${idx}`;\r\n\r\n    const label = document.createElement(\"label\");\r\n    label.htmlFor = checkbox.id;\r\n    label.textContent = `${idx + 1}. ${tag}`;\r\n    label.style.whiteSpace = \"nowrap\";\r\n\r\n    labelWrapper.appendChild(checkbox);\r\n    labelWrapper.appendChild(label);\r\n\r\n    const deleteBtn = document.createElement(\"button\");\r\n    deleteBtn.type = \"button\";\r\n    deleteBtn.style.marginTop = \"12px\";\r\n    deleteBtn.textContent = \"❌\";\r\n    deleteBtn.onclick = async () => {\r\n      await PowerPoint.run(async (context) => {\r\n        const slides = context.presentation.slides;\r\n        slides.load(\"items\");\r\n        await context.sync();\r\n        const slide = slides.items[idx];\r\n        slide.tags.load(\"items\");\r\n        await context.sync();\r\n        slide.tags.delete(\"TOGGLE\");\r\n      });\r\n      console.log(await getAllSlideTags());\r\n      await createToggleSlideForm();\r\n    };\r\n\r\n    div.appendChild(labelWrapper);\r\n    div.appendChild(deleteBtn);\r\n    container.appendChild(div);\r\n  }\r\n\r\n  const submit = document.createElement(\"button\");\r\n  submit.type = \"submit\";\r\n  submit.className = \"inputButton\";\r\n  submit.textContent = \"✅ APLICAR\";\r\n  container.appendChild(submit);\r\n}\r\n\r\nasync function handleToggleSlideSubmit(event) {\r\n  event.preventDefault();\r\n\r\n  // Get all tags (slide indices with TOGGLE tag)\r\n  const tags = await getAllSlideTags();\r\n\r\n  // Collect indices of slides to keep (checked)\r\n  const slidesToKeep = [];\r\n  tags.forEach(({ idx }) => {\r\n    const checkbox = document.getElementById(`slideVisible_${idx}`);\r\n    if (checkbox && checkbox.checked) {\r\n      slidesToKeep.push(idx);\r\n    }\r\n  });\r\n\r\n  // Delete slides that are not checked\r\n  await PowerPoint.run(async (context) => {\r\n    const slides = context.presentation.slides;\r\n    slides.load(\"items\");\r\n    await context.sync();\r\n\r\n    // Build a set for fast lookup\r\n    const keepSet = new Set(slidesToKeep);\r\n\r\n    // Delete from last to first to avoid index shifting\r\n    for (let i = slides.items.length - 1; i >= 0; i--) {\r\n      // Only delete slides that have a TOGGLE tag and are not checked\r\n      const tagObj = tags.find((t) => t.idx === i);\r\n      if (tagObj && !keepSet.has(i)) {\r\n        slides.items[i].delete();\r\n      }\r\n    }\r\n    await context.sync();\r\n  });\r\n\r\n  // Refresh the form after deletion\r\n  await createToggleSlideForm();\r\n}\r\n\r\nfunction showError(msg) {\r\n  const container = document.getElementById(\"errorContainer\");\r\n\r\n  const id = String(Date.now());\r\n\r\n  const div = document.createElement(\"div\");\r\n  div.className = \"error-message\";\r\n  div.id = id;\r\n  div.textContent = `⚠️ ${msg}`;\r\n\r\n  const btn = document.createElement(\"button\");\r\n  btn.className = \"close-btn\";\r\n  btn.onclick = () => {\r\n    document.getElementById(id).style.display = \"none\";\r\n  };\r\n  btn.textContent = \"✖\";\r\n\r\n  div.appendChild(btn);\r\n  container.appendChild(div);\r\n}\r\n\r\nfunction clearErrors() {\r\n  const container = document.getElementById(\"errorContainer\");\r\n  container.innerHTML = \"\";\r\n}\r\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar code = \" <!doctype html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"/> <title>Contoso Task Pane Add-in</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/office-ui-fabric-core/11.1.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <div id=\\\"nav\\\"> <h2>Plantilles PowerPoint</h2> <img src=\\\"https://vilarriba.com/wp-content/uploads/2021/04/VR_logo_red.png\\\" alt=\\\"logo Vilar Riba\\\" width=\\\"40\\\" height=\\\"40\\\"/> </div> <button id=\\\"scanLabelsButton\\\" class=\\\"inputButton\\\">🔍 BUSCAR</button> <div id=\\\"errorContainer\\\"></div> <div class=\\\"form-section\\\"> <button class=\\\"tablink\\\" onclick='openPage(\\\"labelsTab\\\",this,\\\"\\\")' id=\\\"defaultOpen\\\"> Etiquetes </button> <button class=\\\"tablink\\\" onclick='openPage(\\\"slideTab\\\",this,\\\"\\\")'>Diapositives</button> <div id=\\\"labelsTab\\\" class=\\\"tabcontent\\\"> <form id=\\\"labelForm\\\"> <div id=\\\"inputContainer\\\" class=\\\"inputContainer\\\"></div> </form> </div> <div id=\\\"slideTab\\\" class=\\\"tabcontent\\\"> <div style=\\\"border:2px\\\"> <button id=\\\"toggleFormBtn\\\" onclick=\\\"toggleFrom()\\\">+</button> <form id=\\\"newSlideForm\\\" style=\\\"display:none\\\"> <div id=\\\"newSlideFormContainer\\\" class=\\\"inputContainer\\\"> <label for=\\\"slideName\\\">NOM:</label> <input type=\\\"text\\\" id=\\\"slideName\\\" name=\\\"slideName\\\" value=\\\"\\\" required/><br/> <button type=\\\"submit\\\" id=\\\"SlideFormBtn\\\" class=\\\"inputButton\\\">AFEGIR</button> </div> </form> </div> <hr/> <form id=\\\"toggleSlideForm\\\"> <div id=\\\"toggleSlideFormContainer\\\"></div> </form> </div> </div> <\" + \"script>function toggleFrom(){var e=document.getElementById(\\\"newSlideForm\\\");const t=document.getElementById(\\\"toggleFormBtn\\\");\\\"none\\\"===e.style.display?(e.style.display=\\\"block\\\",t.textContent=\\\"-\\\"):(t.textContent=\\\"+\\\",e.style.display=\\\"none\\\")}function openPage(e,t,n){var l,a,o;for(a=document.getElementsByClassName(\\\"tabcontent\\\"),l=0;l<a.length;l++)a[l].style.display=\\\"none\\\";for(o=document.getElementsByClassName(\\\"tablink\\\"),l=0;l<o.length;l++)o[l].style.backgroundColor=\\\"\\\";document.getElementById(e).style.display=\\\"block\\\",t.style.backgroundColor=\\\"#0078d7\\\"}document.getElementById(\\\"defaultOpen\\\").click();const tagTypeSelect=document.getElementById(\\\"tagType\\\"),valueFieldContainer=document.getElementById(\\\"valueFieldContainer\\\");function updateValueField(){valueFieldContainer.innerHTML=\\\"\\\";const e=tagTypeSelect.value,t=document.createElement(\\\"label\\\");if(t.setAttribute(\\\"for\\\",\\\"tagValue\\\"),t.textContent=\\\"Valor\\\",valueFieldContainer.appendChild(t),\\\"BOOL\\\"===e){const e=document.createElement(\\\"select\\\");e.name=\\\"tagValue\\\",e.required=!0;const t=document.createElement(\\\"option\\\");t.value=\\\"true\\\",t.textContent=\\\"True\\\";const n=document.createElement(\\\"option\\\");n.value=\\\"false\\\",n.textContent=\\\"False\\\",e.appendChild(t),e.appendChild(n),valueFieldContainer.appendChild(e)}else{const e=document.createElement(\\\"input\\\");e.type=\\\"text\\\",e.name=\\\"tagValue\\\",e.placeholder=\\\"Tag Value\\\",e.required=!0,valueFieldContainer.appendChild(e)}}updateValueField(),tagTypeSelect.addEventListener(\\\"change\\\",updateValueField)<\" + \"/script> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","customLabelMap","any","Date","getFullYear","toString","mes","getMonth","dia","getDate","padStart","t","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","d","bind","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","defineProperty","enumerable","configurable","writable","_invoke","_slicedToArray","Array","isArray","_arrayWithHoles","next","push","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_createForOfIteratorHelper","_n","F","s","_arrayLikeToArray","slice","constructor","name","from","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","findPattern","_x","_findPattern","_callee3","pattern","foundLabels","_context3","Map","PowerPoint","run","_ref2","_callee2","context","presentation","slides","_iterator2","_step2","slide","shapes","_iterator3","_step3","shape","text","matches","_iterator4","_step4","match","customLabelName","imageLabelName","labelName","dependsOn","dependentValues","options","key","_key","_key2","values","opts","_t2","_t3","_context2","load","sync","items","textFrame","textRange","_toConsumableArray","matchAll","console","log","concat","has","set","type","split","map","trim","err","_x6","scanLabels","_scanLabels","_callee4","_context4","clearErrors","validatedLabels","checkLabels","createToggleSlideForm","createInputFields","Office","onReady","getElementById","onclick","onsubmit","handleFormSubmit","handleNewSlideSubmit","handleToggleSlideSubmit","_step","_iterator","_step$value","label","startsWith","substring","showError","get","_x2","_handleFormSubmit","_callee5","event","labelMap","fileToBase64","filePromises","_context5","file","reject","reader","FileReader","onload","result","onerror","readAsDataURL","preventDefault","forEach","sourceInput","selectedIndex","fileInput","files","base64","input","all","replaceLabels","originalTexts","_x3","_replaceLabels","_callee7","_context7","clear","_ref3","_callee6","slideIdx","shapeIdx","replacements","fullMatch","replacementValue","_validatedLabels$get","sourceValue","sourceOptions","index","_context6","getSubstring","fill","setImage","original","replaced","indexOf","_x7","undoReplaceLabels","_undoReplaceLabels","_callee9","_context9","_ref4","_callee8","_replacements$i","_context8","_x8","labels","container","innerHTML","div","createElement","className","labelEl","setAttribute","textContent","appendChild","id","accept","required","select","opt","optionEl","size","submit","undoBtn","_callee","_context","addUndoButton","msg","getAllSlideTags","_getAllSlideTags","_callee1","tags","_context1","_ref5","_callee0","_iterator5","_step5","tag","_t6","_context0","idx","_x9","_x4","_handleNewSlideSubmit","_callee11","tagValue","_t7","_t8","_context11","_ref6","_callee10","selection","selectedId","_context10","getSelectedSlides","findIndex","delete","add","_x0","_createToggleSlideForm","_callee14","_iterator6","_step6","_loop","_t1","_context15","style","display","_step6$value","labelWrapper","checkbox","deleteBtn","_context14","alignItems","justifyContent","marginBottom","gap","checked","htmlFor","whiteSpace","marginTop","_callee13","_t9","_t0","_context13","_ref8","_callee12","_context12","_x1","_regeneratorValues","_x5","_handleToggleSlideSubmit","_callee16","slidesToKeep","_context18","_ref9","_ref0","_callee15","keepSet","_loop2","_context17","Set","_context16","find","_x10","String","now","btn","URL"],"sourceRoot":""}