{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/custom_labels.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","export const customLabelMap = {\r\n  any: () => new Date().getFullYear().toString(),\r\n  mes: () => {\r\n    const mesosCatalans = [\r\n      \"gener\",\r\n      \"febrer\",\r\n      \"març\",\r\n      \"abril\",\r\n      \"maig\",\r\n      \"juny\",\r\n      \"juliol\",\r\n      \"agost\",\r\n      \"setembre\",\r\n      \"octubre\",\r\n      \"novembre\",\r\n      \"desembre\",\r\n    ];\r\n    return mesosCatalans[new Date().getMonth()];\r\n  },\r\n  dia: () => new Date().getDate().toString().padStart(2, \"0\"),\r\n  any_passat: () => (new Date().getFullYear() - 1).toString(),\r\n};\r\n","import { customLabelMap } from \"./custom_labels.js\";\r\n\r\nOffice.onReady(() => {\r\n  scanLabels();\r\n  document.getElementById(\"scanLabelsButton\").onclick = async () => {\r\n    clearErrors();\r\n    await scanLabels();\r\n  };\r\n  document.getElementById(\"toggleEditModeBtn\").onclick = toggleEditMode;\r\n  document.getElementById(\"labelForm\").onsubmit = handleFormSubmit;\r\n  document.getElementById(\"newSlideForm\").onsubmit = handleNewSlideSubmit;\r\n  document.getElementById(\"toggleSlideForm\").onsubmit = handleToggleSlideSubmit;\r\n});\r\n\r\nasync function findPattern(pattern) {\r\n  let foundLabels = new Map();\r\n  await PowerPoint.run(async (context) => {\r\n    const presentation = context.presentation;\r\n    const slides = presentation.slides;\r\n    slides.load(\"items\");\r\n    await context.sync();\r\n\r\n    for (let slide of slides.items) {\r\n      let shapes = slide.shapes;\r\n      shapes.load(\"items\");\r\n      await context.sync();\r\n\r\n      for (let shape of shapes.items) {\r\n        try {\r\n          shape.textFrame.load(\"textRange/text\");\r\n          await context.sync();\r\n\r\n          const text = shape.textFrame.textRange.text;\r\n          const matches = [...text.matchAll(pattern)];\r\n          if (matches.length > 0) {\r\n            console.log(\"Match: \", matches);\r\n          }\r\n\r\n          for (const match of matches) {\r\n            const customLabelName = match[1];\r\n            const imageLabelName = match[2];\r\n            const labelName = match[3];\r\n            const dependsOn = match[4];\r\n            const dependentValues = match[5];\r\n            const options = match[6];\r\n\r\n            if (customLabelName) {\r\n              const key = `#${customLabelName}`;\r\n              if (!foundLabels.has(key)) {\r\n                foundLabels.set(key, { type: \"custom\" });\r\n              }\r\n            }\r\n            if (imageLabelName) {\r\n              const key = `*${imageLabelName}`;\r\n              if (!foundLabels.has(key)) {\r\n                foundLabels.set(key, { type: \"image\" });\r\n              }\r\n            }\r\n            if (labelName) {\r\n              const key = labelName;\r\n              if (dependsOn && dependentValues) {\r\n                const values = dependentValues.split(\",\").map((v) => v.trim());\r\n                if (!foundLabels.has(key)) {\r\n                  foundLabels.set(key, {\r\n                    options: null,\r\n                    dependsOn,\r\n                    map: values,\r\n                  });\r\n                }\r\n              } else if (options) {\r\n                const opts = options.split(\",\").map((v) => v.trim());\r\n                if (!foundLabels.has(key)) {\r\n                  foundLabels.set(key, {\r\n                    options: opts,\r\n                    dependsOn: null,\r\n                    map: null,\r\n                  });\r\n                }\r\n              } else {\r\n                if (!foundLabels.has(key)) {\r\n                  foundLabels.set(key, {\r\n                    options: null,\r\n                    dependsOn: null,\r\n                    map: null,\r\n                  });\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } catch (error) {}\r\n      }\r\n    }\r\n  });\r\n\r\n  return foundLabels;\r\n}\r\n\r\nlet validatedLabels = new Map();\r\nasync function scanLabels() {\r\n  validatedLabels.clear();\r\n  const pattern = /<<#(\\w+)>>|<<\\*(\\w+)>>|<<(\\w+)(?::(\\w+)\\[([^\\]]+)\\]|(?:\\[([^\\]]+)\\]))?>>/g;\r\n  let foundLabels = await findPattern(pattern);\r\n  console.log(\"Found labels: \", foundLabels);\r\n\r\n  validatedLabels = checkLabels(foundLabels);\r\n  console.log(\"Validated\", validatedLabels);\r\n\r\n  await createToggleSlideForm();\r\n  createInputFields(validatedLabels);\r\n}\r\n\r\nfunction checkLabels(foundLabels) {\r\n  for (const [name, label] of foundLabels) {\r\n    if (name.startsWith(\"#\") && !customLabelMap.hasOwnProperty(name.substring(1))) {\r\n      showError(`<<#${name.substring(1)}>> no existeix!`);\r\n      continue;\r\n    }\r\n    if (label.dependsOn) {\r\n      if (!foundLabels.has(label.dependsOn)) {\r\n        showError(`<<${label.dependsOn}>> no existeix!`);\r\n        continue;\r\n      }\r\n      if (foundLabels.get(label.dependsOn)[\"options\"].length !== label.map.length) {\r\n        showError(`El nombe d'opcions de <<${name}>> i <<${label.dependsOn}>> ha de ser igual!`);\r\n        continue;\r\n      }\r\n      if (!validatedLabels.has(name)) {\r\n        validatedLabels.set(name, label);\r\n      }\r\n    } else if (label.options) {\r\n      validatedLabels.set(name, label);\r\n    } else {\r\n      validatedLabels.set(name, label);\r\n    }\r\n  }\r\n  return validatedLabels;\r\n}\r\n\r\nasync function handleFormSubmit(event) {\r\n  event.preventDefault();\r\n\r\n  const labelMap = {};\r\n\r\n  // Helper to convert file to base64\r\n  function fileToBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => resolve(reader.result.split(\",\")[1]); // Remove data:image/...;base64,\r\n      reader.onerror = reject;\r\n      reader.readAsDataURL(file);\r\n    });\r\n  }\r\n\r\n  // Collect all file input promises\r\n  const filePromises = [];\r\n\r\n  validatedLabels.forEach((label, name) => {\r\n    if (label.dependsOn && label.map) {\r\n      const sourceInput = document.getElementById(label.dependsOn);\r\n      if (sourceInput) {\r\n        const selectedIndex = sourceInput.selectedIndex;\r\n        labelMap[name] = label.map[selectedIndex];\r\n      }\r\n    } else if (name.startsWith(\"*\")) {\r\n      const fileInput = document.getElementById(name);\r\n      if (fileInput && fileInput.files.length > 0) {\r\n        // Push a promise to convert file to base64\r\n        filePromises.push(\r\n          fileToBase64(fileInput.files[0]).then((base64) => {\r\n            labelMap[name] = base64;\r\n          })\r\n        );\r\n      }\r\n    } else {\r\n      const input = document.getElementById(name);\r\n      if (input) {\r\n        labelMap[name] = input.value;\r\n      }\r\n    }\r\n  });\r\n\r\n  // Wait for all file conversions\r\n  await Promise.all(filePromises);\r\n\r\n  console.log(\"Final labelMap:\", labelMap);\r\n  await replaceLabels(labelMap);\r\n}\r\n\r\nlet originalTexts = new Map(); // Store original text for undo\r\n\r\nasync function replaceLabels(labelMap) {\r\n  originalTexts.clear(); // Clear previous state\r\n  await PowerPoint.run(async (context) => {\r\n    const slides = context.presentation.slides;\r\n    slides.load(\"items\");\r\n    await context.sync();\r\n\r\n    const pattern = /<<#(\\w+)>>|<<\\*(\\w+)>>|<<(\\w+)(?::(\\w+)\\[([^\\]]+)\\]|(?:\\[([^\\]]+)\\]))?>>/g;\r\n    for (let slideIdx = 0; slideIdx < slides.items.length; slideIdx++) {\r\n      const slide = slides.items[slideIdx];\r\n      const shapes = slide.shapes;\r\n      shapes.load(\"items\");\r\n      await context.sync();\r\n\r\n      for (let shapeIdx = 0; shapeIdx < shapes.items.length; shapeIdx++) {\r\n        try {\r\n          const shape = shapes.items[shapeIdx];\r\n          shape.textFrame.load(\"textRange/text\");\r\n          await context.sync();\r\n\r\n          const textRange = shape.textFrame.textRange;\r\n          const text = textRange.text;\r\n\r\n          const matches = [...text.matchAll(pattern)];\r\n\r\n          const replacements = [];\r\n          for (let i = matches.length - 1; i >= 0; i--) {\r\n            const match = matches[i];\r\n            const fullMatch = match[0];\r\n            const customLabelName = match[1]; // <<#name>>\r\n            const imageLabelName = match[2]; // <<*name>>\r\n            const labelName = match[3]; // <<labelName...>>\r\n            const dependsOn = match[4];\r\n            const dependentValues = match[5];\r\n            const options = match[6];\r\n\r\n            let replacementValue = null;\r\n\r\n            if (customLabelName && customLabelMap.hasOwnProperty(customLabelName)) {\r\n              replacementValue = customLabelMap[customLabelName]();\r\n            } else if (imageLabelName && labelMap[`*${imageLabelName}`]) {\r\n              // Replace the shape with an image if <<*name>> is found\r\n              const base64 = labelMap[`*${imageLabelName}`];\r\n              // Remove the label text\r\n              const subRange = textRange.getSubstring(match.index, fullMatch.length);\r\n              subRange.text = \"\";\r\n              // Set the image as fill (if possible)\r\n              await shape.fill.setImage(base64);\r\n              // Store the replacement for undo (removes label text, not image)\r\n              replacements.push({\r\n                index: match.index,\r\n                original: fullMatch,\r\n                replaced: \"\",\r\n              });\r\n              continue; // Skip further text replacement for this match\r\n            } else if (dependsOn && dependentValues) {\r\n              const sourceValue = labelMap[dependsOn];\r\n              const values = dependentValues.split(\",\").map((v) => v.trim());\r\n              const sourceOptions = validatedLabels.get(dependsOn)?.options || [];\r\n              const index = sourceOptions.indexOf(sourceValue);\r\n              if (index !== -1 && index < values.length) {\r\n                replacementValue = values[index];\r\n              }\r\n            } else if (labelName) {\r\n              replacementValue = labelMap[labelName];\r\n            }\r\n\r\n            if (replacementValue !== null && replacementValue !== undefined) {\r\n              const subRange = textRange.getSubstring(match.index, fullMatch.length);\r\n              subRange.text = replacementValue;\r\n              replacements.push({\r\n                index: match.index,\r\n                original: fullMatch,\r\n                replaced: replacementValue,\r\n              });\r\n            }\r\n          }\r\n          originalTexts.set(`${slideIdx}_${shapeIdx}`, replacements);\r\n        } catch (error) {}\r\n      }\r\n    }\r\n    console.log(\"originals: \", originalTexts);\r\n    addUndoButton();\r\n    await context.sync();\r\n  });\r\n  const substituirBtn = document.getElementById(\"substituirBtn\");\r\n  if (substituirBtn) {\r\n    substituirBtn.remove();\r\n  }\r\n}\r\n\r\nasync function undoReplaceLabels() {\r\n  await PowerPoint.run(async (context) => {\r\n    const slides = context.presentation.slides;\r\n    slides.load(\"items\");\r\n    await context.sync();\r\n\r\n    for (let slideIdx = 0; slideIdx < slides.items.length; slideIdx++) {\r\n      const slide = slides.items[slideIdx];\r\n      const shapes = slide.shapes;\r\n      shapes.load(\"items\");\r\n      await context.sync();\r\n\r\n      for (let shapeIdx = 0; shapeIdx < shapes.items.length; shapeIdx++) {\r\n        try {\r\n          const shape = shapes.items[shapeIdx];\r\n          shape.textFrame.load(\"textRange/text\");\r\n          await context.sync();\r\n\r\n          const textRange = shape.textFrame.textRange;\r\n          const key = `${slideIdx}_${shapeIdx}`;\r\n          const replacements = originalTexts.get(key);\r\n\r\n          if (replacements && replacements.length > 0) {\r\n            console.log(\"Replacemtns: \", replacements);\r\n\r\n            for (let i = replacements.length - 1; i >= 0; i--) {\r\n              const { index, original, replaced } = replacements[i];\r\n              const subRange = textRange.getSubstring(index, replaced.length);\r\n              subRange.load(\"text\");\r\n              await context.sync();\r\n              if (subRange.text === replaced) {\r\n                subRange.text = original;\r\n              } else {\r\n                showError(\"Com que s'ha modificat el text no s'han pogut desfer alguns canvis.\");\r\n              }\r\n            }\r\n          }\r\n        } catch {}\r\n      }\r\n    }\r\n    await context.sync();\r\n  });\r\n  originalTexts.clear();\r\n  scanLabels();\r\n}\r\n\r\nfunction addUndoButton() {\r\n  const container = document.getElementById(\"inputContainer\");\r\n  let undoBtn = document.getElementById(\"undoButton\");\r\n  if (!undoBtn) {\r\n    undoBtn = document.createElement(\"button\");\r\n    undoBtn.id = \"undoButton\";\r\n    undoBtn.type = \"button\";\r\n    undoBtn.className = \"inputButton\";\r\n    undoBtn.textContent = \"↩️ DESFER\";\r\n    undoBtn.onclick = async () => {\r\n      await undoReplaceLabels();\r\n    };\r\n    container.appendChild(undoBtn);\r\n  }\r\n  if (originalTexts.size <= 0) {\r\n    undoBtn.remove();\r\n    return;\r\n  }\r\n}\r\n\r\nfunction createInputFields(labels) {\r\n  const container = document.getElementById(\"inputContainer\");\r\n  container.innerHTML = \"\";\r\n\r\n  labels.forEach((label, name) => {\r\n    if (label.dependsOn) return;\r\n    if (name.startsWith(\"#\")) return; // Skip custom labels (auto-filled)\r\n\r\n    const div = document.createElement(\"div\");\r\n    div.className = \"form-group\";\r\n\r\n    const labelEl = document.createElement(\"label\");\r\n    labelEl.setAttribute(\"for\", name);\r\n    if (name.startsWith(\"*\")) {\r\n      labelEl.textContent = name.substring(1);\r\n    } else {\r\n      labelEl.textContent = name;\r\n    }\r\n    div.appendChild(labelEl);\r\n\r\n    // Add file input for image labels (<<*name>>)\r\n    if (name.startsWith(\"*\")) {\r\n      const fileInput = document.createElement(\"input\");\r\n      fileInput.type = \"file\";\r\n      fileInput.id = name;\r\n      fileInput.name = name;\r\n      fileInput.accept = \"image/*\";\r\n      fileInput.required = true;\r\n      div.appendChild(fileInput);\r\n    } else if (Array.isArray(label.options)) {\r\n      const select = document.createElement(\"select\");\r\n      select.id = name;\r\n      select.className = \"selector\";\r\n      select.name = name;\r\n\r\n      label.options.forEach((opt) => {\r\n        const optionEl = document.createElement(\"option\");\r\n        optionEl.value = opt;\r\n        optionEl.textContent = opt;\r\n        select.appendChild(optionEl);\r\n      });\r\n\r\n      div.appendChild(select);\r\n    } else {\r\n      const input = document.createElement(\"input\");\r\n      input.type = \"text\";\r\n      input.id = name;\r\n      input.name = name;\r\n      input.required = true;\r\n      div.appendChild(input);\r\n    }\r\n\r\n    container.appendChild(div);\r\n  });\r\n\r\n  if (labels.size > 0) {\r\n    const submit = document.createElement(\"button\");\r\n    submit.id = \"substituirBtn\";\r\n    submit.type = \"submit\";\r\n    submit.className = \"inputButton\";\r\n    submit.textContent = \"✅ SUBSTITUIR\";\r\n    container.appendChild(submit);\r\n  } else {\r\n    const msg = document.createElement(\"p\");\r\n    msg.textContent = \"No s'ha trobat cap etiqueta.\";\r\n\r\n    container.appendChild(msg);\r\n  }\r\n  addUndoButton();\r\n}\r\n\r\nasync function getAllSlideTags() {\r\n  const tags = [];\r\n  await PowerPoint.run(async (context) => {\r\n    const slides = context.presentation.slides;\r\n    slides.load(\"items\");\r\n    await context.sync();\r\n    for (let i = 0; i < slides.items.length; i++) {\r\n      const slide = slides.items[i];\r\n      slide.tags.load(\"items\");\r\n      await context.sync();\r\n      for (const tag of slide.tags.items) {\r\n        if (tag.key === \"TOGGLE\") {\r\n          tags.push({ idx: i, tag: tag.value });\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  });\r\n  return tags;\r\n}\r\n\r\nasync function handleNewSlideSubmit(event) {\r\n  event.preventDefault();\r\n\r\n  const input = document.getElementById(\"slideName\");\r\n  if (!input || !input.value.trim()) return;\r\n  const tagValue = input.value.trim();\r\n\r\n  await PowerPoint.run(async (context) => {\r\n    const slides = context.presentation.slides;\r\n    slides.load(\"items\");\r\n    await context.sync();\r\n\r\n    const selection = context.presentation.getSelectedSlides();\r\n    selection.load(\"items\");\r\n    await context.sync();\r\n\r\n    if (selection.items.length > 0) {\r\n      const selectedId = selection.items[0].id;\r\n      const slideIdx = slides.items.findIndex((s) => s.id === selectedId);\r\n      if (slideIdx !== -1) {\r\n        const slide = slides.items[slideIdx];\r\n        slide.tags.load(\"items\");\r\n        await context.sync();\r\n        slide.tags.delete(\"TOGGLE\");\r\n        slide.tags.add(\"TOGGLE\", tagValue);\r\n        await context.sync();\r\n      }\r\n    }\r\n  });\r\n\r\n  console.log(await getAllSlideTags());\r\n  input.value = \"\";\r\n  createToggleSlideForm();\r\n}\r\n\r\nlet editMode = false;\r\nfunction toggleEditMode() {\r\n  editMode = !editMode;\r\n  createToggleSlideForm();\r\n}\r\n\r\nasync function createToggleSlideForm() {\r\n  const container = document.getElementById(\"toggleSlideFormContainer\");\r\n  container.style.display = \"block\";\r\n  container.innerHTML = \"\";\r\n\r\n  const tags = await getAllSlideTags();\r\n\r\n  if (tags.length === 0) {\r\n    container.textContent = \"No s'han trobat diapositives.\";\r\n    return;\r\n  }\r\n\r\n  for (const { idx, tag } of tags) {\r\n    const div = document.createElement(\"div\");\r\n    div.style.display = \"flex\";\r\n    div.style.alignItems = \"center\";\r\n    div.style.justifyContent = \"space-between\";\r\n    div.style.marginBottom = \"8px\";\r\n\r\n    const labelWrapper = document.createElement(\"div\");\r\n    labelWrapper.style.display = \"flex\";\r\n\r\n    labelWrapper.style.gap = \"6px\";\r\n\r\n    const checkbox = document.createElement(\"input\");\r\n    checkbox.type = \"checkbox\";\r\n    checkbox.checked = true;\r\n    checkbox.className = \"checkmark\";\r\n    checkbox.id = `slideVisible_${idx}`;\r\n\r\n    const label = document.createElement(\"label\");\r\n    label.htmlFor = checkbox.id;\r\n    label.textContent = `${idx + 1}. ${tag}`;\r\n    label.style.whiteSpace = \"nowrap\";\r\n\r\n    labelWrapper.appendChild(checkbox);\r\n    labelWrapper.appendChild(label);\r\n\r\n    const deleteBtn = document.createElement(\"button\");\r\n    deleteBtn.type = \"button\";\r\n    deleteBtn.style.marginTop = \"12px\";\r\n    deleteBtn.textContent = \"❌\";\r\n    deleteBtn.style.display = editMode ? \"block\" : \"none\";\r\n    deleteBtn.onclick = async () => {\r\n      await PowerPoint.run(async (context) => {\r\n        const slides = context.presentation.slides;\r\n        slides.load(\"items\");\r\n        await context.sync();\r\n        const slide = slides.items[idx];\r\n        slide.tags.load(\"items\");\r\n        await context.sync();\r\n        slide.tags.delete(\"TOGGLE\");\r\n      });\r\n      console.log(await getAllSlideTags());\r\n      await createToggleSlideForm();\r\n    };\r\n\r\n    div.appendChild(labelWrapper);\r\n    div.appendChild(deleteBtn);\r\n    container.appendChild(div);\r\n  }\r\n\r\n  const submit = document.createElement(\"button\");\r\n  submit.type = \"submit\";\r\n  submit.className = \"inputButton\";\r\n  submit.textContent = \"✅ APLICAR\";\r\n  container.appendChild(submit);\r\n}\r\n\r\nasync function handleToggleSlideSubmit(event) {\r\n  event.preventDefault();\r\n\r\n  // Get all tags (slide indices with TOGGLE tag)\r\n  const tags = await getAllSlideTags();\r\n\r\n  // Collect indices of slides to keep (checked)\r\n  const slidesToKeep = [];\r\n  tags.forEach(({ idx }) => {\r\n    const checkbox = document.getElementById(`slideVisible_${idx}`);\r\n    if (checkbox && checkbox.checked) {\r\n      slidesToKeep.push(idx);\r\n    }\r\n  });\r\n\r\n  // Delete slides that are not checked\r\n  await PowerPoint.run(async (context) => {\r\n    const slides = context.presentation.slides;\r\n    slides.load(\"items\");\r\n    await context.sync();\r\n\r\n    // Build a set for fast lookup\r\n    const keepSet = new Set(slidesToKeep);\r\n\r\n    // Delete from last to first to avoid index shifting\r\n    for (let i = slides.items.length - 1; i >= 0; i--) {\r\n      // Only delete slides that have a TOGGLE tag and are not checked\r\n      const tagObj = tags.find((t) => t.idx === i);\r\n      if (tagObj && !keepSet.has(i)) {\r\n        slides.items[i].delete();\r\n      }\r\n    }\r\n    await context.sync();\r\n  });\r\n\r\n  await scanLabels();\r\n}\r\n\r\nfunction showError(msg) {\r\n  const container = document.getElementById(\"errorContainer\");\r\n\r\n  const id = String(Date.now());\r\n\r\n  const div = document.createElement(\"div\");\r\n  div.className = \"error-message\";\r\n  div.id = id;\r\n  div.textContent = `⚠️ ${msg}`;\r\n\r\n  const btn = document.createElement(\"button\");\r\n  btn.className = \"close-btn\";\r\n  btn.onclick = () => {\r\n    document.getElementById(id).style.display = \"none\";\r\n  };\r\n  btn.textContent = \"✖\";\r\n\r\n  div.appendChild(btn);\r\n  container.appendChild(div);\r\n}\r\n\r\nfunction clearErrors() {\r\n  const container = document.getElementById(\"errorContainer\");\r\n  container.innerHTML = \"\";\r\n}\r\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar code = \" <!doctype html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"/> <title>Plantilles PowerPoint</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/office-ui-fabric-core/11.1.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <div id=\\\"nav\\\"> <h2>Plantilles PowerPoint</h2> <img src=\\\"https://vilarriba.com/wp-content/uploads/2021/04/VR_logo_red.png\\\" alt=\\\"logo Vilar Riba\\\" width=\\\"40\\\" height=\\\"40\\\"/> </div> <button id=\\\"scanLabelsButton\\\" class=\\\"inputButton\\\">🔍 BUSCAR</button> <div id=\\\"errorContainer\\\"></div> <div class=\\\"form-section\\\"> <button class=\\\"tablink\\\" onclick='openPage(\\\"labelsTab\\\",this,\\\"\\\")' id=\\\"defaultOpen\\\"> Etiquetes </button> <button class=\\\"tablink\\\" onclick='openPage(\\\"slideTab\\\",this,\\\"\\\")'>Diapositives</button> <div id=\\\"labelsTab\\\" class=\\\"tabcontent\\\"> <form id=\\\"labelForm\\\"> <div id=\\\"inputContainer\\\" class=\\\"inputContainer\\\"></div> </form> </div> <div id=\\\"slideTab\\\" class=\\\"tabcontent\\\"> <div style=\\\"width:100%;display:inline-flex\\\"> <div style=\\\"display:flex;justify-content:space-between;align-items:center;width:100%\\\"> <button id=\\\"toggleFormBtn\\\" onclick=\\\"toggleFrom()\\\">+</button> <button id=\\\"toggleEditModeBtn\\\">Edita</button> </div> <form id=\\\"newSlideForm\\\" style=\\\"display:none\\\"> <div id=\\\"newSlideFormContainer\\\" class=\\\"inputContainer\\\"> <label for=\\\"slideName\\\">NOM:</label> <input type=\\\"text\\\" id=\\\"slideName\\\" name=\\\"slideName\\\" value=\\\"\\\" required/><br/> <button type=\\\"submit\\\" id=\\\"SlideFormBtn\\\" class=\\\"inputButton\\\">AFEGIR</button> </div> </form> </div> <hr/> <form id=\\\"toggleSlideForm\\\"> <div id=\\\"toggleSlideFormContainer\\\"></div> </form> </div> </div> <\" + \"script>function toggleFrom(){var e=document.getElementById(\\\"newSlideForm\\\");const t=document.getElementById(\\\"toggleFormBtn\\\");\\\"none\\\"===e.style.display?(e.style.display=\\\"block\\\",t.textContent=\\\"-\\\"):(t.textContent=\\\"+\\\",e.style.display=\\\"none\\\")}function openPage(e,t,n){var l,a,o;for(a=document.getElementsByClassName(\\\"tabcontent\\\"),l=0;l<a.length;l++)a[l].style.display=\\\"none\\\";for(o=document.getElementsByClassName(\\\"tablink\\\"),l=0;l<o.length;l++)o[l].style.backgroundColor=\\\"\\\";document.getElementById(e).style.display=\\\"block\\\",t.style.backgroundColor=\\\"#0078d7\\\"}document.getElementById(\\\"defaultOpen\\\").click();const tagTypeSelect=document.getElementById(\\\"tagType\\\"),valueFieldContainer=document.getElementById(\\\"valueFieldContainer\\\");function updateValueField(){valueFieldContainer.innerHTML=\\\"\\\";const e=tagTypeSelect.value,t=document.createElement(\\\"label\\\");if(t.setAttribute(\\\"for\\\",\\\"tagValue\\\"),t.textContent=\\\"Valor\\\",valueFieldContainer.appendChild(t),\\\"BOOL\\\"===e){const e=document.createElement(\\\"select\\\");e.name=\\\"tagValue\\\",e.required=!0;const t=document.createElement(\\\"option\\\");t.value=\\\"true\\\",t.textContent=\\\"True\\\";const n=document.createElement(\\\"option\\\");n.value=\\\"false\\\",n.textContent=\\\"False\\\",e.appendChild(t),e.appendChild(n),valueFieldContainer.appendChild(e)}else{const e=document.createElement(\\\"input\\\");e.type=\\\"text\\\",e.name=\\\"tagValue\\\",e.placeholder=\\\"Tag Value\\\",e.required=!0,valueFieldContainer.appendChild(e)}}updateValueField(),tagTypeSelect.addEventListener(\\\"change\\\",updateValueField)<\" + \"/script> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","customLabelMap","any","Date","getFullYear","toString","mes","getMonth","dia","getDate","padStart","any_passat","t","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","d","bind","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","defineProperty","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","findPattern","_x","_findPattern","_callee4","pattern","foundLabels","_context4","Map","PowerPoint","run","_ref3","_callee3","context","presentation","slides","_iterator2","_step2","slide","shapes","_iterator3","_step3","shape","text","matches","_iterator4","_step4","match","customLabelName","imageLabelName","labelName","dependsOn","dependentValues","options","key","_key","_key2","values","opts","_t2","_t3","_context3","load","sync","_createForOfIteratorHelper","items","s","textFrame","textRange","_toConsumableArray","matchAll","console","log","concat","has","set","type","split","map","trim","err","_x6","Office","onReady","scanLabels","getElementById","onclick","_callee","_context","clearErrors","toggleEditMode","onsubmit","handleFormSubmit","handleNewSlideSubmit","handleToggleSlideSubmit","validatedLabels","_scanLabels","_callee5","_context5","clear","checkLabels","createToggleSlideForm","createInputFields","_step","_iterator","_step$value","_slicedToArray","name","label","startsWith","substring","showError","get","_x2","_handleFormSubmit","_callee6","event","labelMap","fileToBase64","filePromises","_context6","file","reject","reader","FileReader","onload","result","onerror","readAsDataURL","preventDefault","forEach","sourceInput","selectedIndex","fileInput","files","push","base64","input","all","replaceLabels","originalTexts","_x3","_replaceLabels","_callee8","substituirBtn","_context8","_ref4","_callee7","slideIdx","shapeIdx","replacements","fullMatch","replacementValue","_validatedLabels$get","sourceValue","sourceOptions","index","_context7","getSubstring","fill","setImage","original","replaced","indexOf","addUndoButton","_x7","remove","undoReplaceLabels","_undoReplaceLabels","_callee0","_context0","_ref5","_callee9","_replacements$i","subRange","_context9","_x8","container","undoBtn","createElement","id","className","textContent","_callee2","_context2","appendChild","size","labels","innerHTML","div","labelEl","setAttribute","accept","required","Array","isArray","select","opt","optionEl","submit","msg","getAllSlideTags","_getAllSlideTags","_callee10","tags","_context10","_ref6","_callee1","_iterator5","_step5","tag","_t6","_context1","idx","_x9","_x4","_handleNewSlideSubmit","_callee12","tagValue","_t7","_t8","_context12","_ref7","_callee11","selection","selectedId","_context11","getSelectedSlides","findIndex","delete","add","_x0","editMode","_createToggleSlideForm","_callee15","_iterator6","_step6","_loop","_t1","_context16","style","display","_step6$value","labelWrapper","checkbox","deleteBtn","_context15","alignItems","justifyContent","marginBottom","gap","checked","htmlFor","whiteSpace","marginTop","_callee14","_t9","_t0","_context14","_ref9","_callee13","_context13","_x1","_regeneratorValues","_x5","_handleToggleSlideSubmit","_callee17","slidesToKeep","_context19","_ref0","_ref1","_callee16","keepSet","_loop2","_context18","Set","_context17","find","_x10","String","now","btn","URL"],"sourceRoot":""}